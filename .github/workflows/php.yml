name: PHP
on: push
jobs:
  analyse:
    strategy:
      matrix:
        php-version: [ '7.4', '8.0', '8.1' ]

    runs-on: ubuntu-latest

    steps:
      - &checkout
        name: Checkout
        uses: actions/checkout@v2

      - name: Validate composer.json
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php-version }}
          command: validate

      - &composer-cache
        name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: /tmp/composer-cache
          key: ${{ runner.os }}-${{ matrix.php-version }}-composer${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.php-version }}-composer

      - &composer-install
        name: Install composer dependencies
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php-version }}

      - name: PHP Lint
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php-version }}
          command: lint

      - name: PHPStan
        uses: php-actions/composer@v6
        with:
          php_version: ${{ matrix.php-version }}
          command: analyse

  tests:
    strategy:
      matrix:
        php-versions: ['7.4', '8.0', '8.1']

    runs-on: ubuntu-latest

    steps:
      - *checkout
      - *composer-cache
      - *composer-install

      - name: PHPUnit test case
        run: composer test

      - uses: actions/upload-artifact@v2
        with:
          name: coverage-report
          path: coverage
